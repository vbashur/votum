<beans:beans xmlns="http://www.springframework.org/schema/security"
 xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd">

 <beans:import resource="applicationPersistence.xml" />
 
 <http auto-config="true" use-expressions="true">  
  <intercept-url pattern="/index*" access="isAuthenticated()" />
  <intercept-url pattern="/add/*" access="hasRole('ROLE_ADMIN')" />
  <intercept-url pattern="/edit*" access="hasRole('ROLE_ADMIN')" />    
  <intercept-url pattern="/delete/1" access="hasRole('ROLE_SUPER_ADMIN')" />
  <intercept-url pattern="/delete/*" access="hasRole('ROLE_ADMIN')" />
  <intercept-url pattern="/resend_password*" access="permitAll" />   
  <intercept-url pattern="/resources/**" access="permitAll" />
  <form-login login-processing-url="/static/j_spring_security_check" 
     login-page="/login.jsp"    
     authentication-failure-url="/login.jsp?error=true" />
  <logout logout-url="/logout" logout-success-url="/index" /> 
  <access-denied-handler error-page="/error403.jsp" />
  <!-- enable csrf protection -->
<!--   <csrf/> -->
 </http>
   
 <authentication-manager>
   <authentication-provider>
  <jdbc-user-service data-source-ref="dataSource"
    users-by-username-query=
      "select Email,password,true from User where Email=?"
    authorities-by-username-query=
      "select Email,role from User_roles where Email=?  " />
   </authentication-provider>
 </authentication-manager>
</beans:beans>